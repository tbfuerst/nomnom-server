name: Deploy on Docker Hub - Dev Branch

on:
  workflow_dispatch:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test_build:
    runs-on: ubuntu-latest
    env: 
      SECRET_KEY: ${{ secrets.DJ_SECRET_KEY }}
      ALLOWED_HOST: ${{ secrets.ALLOWED_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: nomnom_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Postgres psycopg2 dependencies
      run: sudo apt-get install libpq-dev
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: python manage.py migrate
    - name: Run Tests
      run: |
        python manage.py test

  build_docker_amd64:
    runs-on: ubuntu-latest
    needs: test_build
    env: 
      SECRET_KEY: ${{ secrets.DJ_SECRET_KEY }}
      ALLOWED_HOST: ${{ secrets.ALLOWED_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2        
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: tluderer/nomnomserver:latest-amd64

  build_docker_arm64:
    runs-on: ubuntu-latest
    needs: test_build
    env: 
      SECRET_KEY: ${{ secrets.DJ_SECRET_KEY }}
      ALLOWED_HOST: ${{ secrets.ALLOWED_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2        
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip    
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/arm64
        push: true
        tags: tluderer/nomnomserver:latest-arm64        

  build_docker_armv7:
    runs-on: ubuntu-latest
    needs: test_build
    env: 
      SECRET_KEY: ${{ secrets.DJ_SECRET_KEY }}
      ALLOWED_HOST: ${{ secrets.ALLOWED_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2        
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/arm/v7
        push: true
        tags: tluderer/nomnomserver:latest-armv7 